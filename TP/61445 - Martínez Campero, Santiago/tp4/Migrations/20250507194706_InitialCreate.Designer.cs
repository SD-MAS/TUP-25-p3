// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace tp4.Migrations
{
    [DbContext(typeof(DatosContexto))]
    [Migration("20250507194706_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("Examen", b =>
                {
                    b.Property<int>("ExamenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Correctas")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreAlumno")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("NotaFinal")
                        .HasColumnType("REAL");

                    b.Property<int>("TotalPreguntas")
                        .HasColumnType("INTEGER");

                    b.HasKey("ExamenId");

                    b.ToTable("Examenes");
                });

            modelBuilder.Entity("Pregunta", b =>
                {
                    b.Property<int>("PreguntaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Correcta")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Enunciado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RespuestaA")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RespuestaB")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RespuestaC")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PreguntaId");

                    b.ToTable("Preguntas");
                });

            modelBuilder.Entity("Respuesta", b =>
                {
                    b.Property<int>("RespuestaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EsCorrecta")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExamenId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OpcionElegida")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PreguntaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RespuestaId");

                    b.HasIndex("ExamenId");

                    b.HasIndex("PreguntaId");

                    b.ToTable("Respuestas");
                });

            modelBuilder.Entity("Respuesta", b =>
                {
                    b.HasOne("Examen", "Examen")
                        .WithMany("Respuestas")
                        .HasForeignKey("ExamenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pregunta", "Pregunta")
                        .WithMany()
                        .HasForeignKey("PreguntaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Examen");

                    b.Navigation("Pregunta");
                });

            modelBuilder.Entity("Examen", b =>
                {
                    b.Navigation("Respuestas");
                });
#pragma warning restore 612, 618
        }
    }
}
